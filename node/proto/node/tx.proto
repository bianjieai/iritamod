syntax = "proto3";
package iritamod.node;

import "gogoproto/gogo.proto";

option go_package = "github.com/bianjieai/iritamod/modules/node/types";
option (gogoproto.goproto_getters_all) = false;

// Msg defines the node Msg service.
service Msg {
    // CreateValidator defines a method for creating a validator.
    rpc CreateValidator(MsgCreateValidator) returns (MsgCreateValidatorResponse);

    // UpdateValidator defines a method for updating a validator.
    rpc UpdateValidator(MsgUpdateValidator) returns (MsgUpdateValidatorResponse);

    // RemoveValidator defines a method for removing a validator.
    rpc RemoveValidator(MsgRemoveValidator) returns (MsgRemoveValidatorResponse);
    
    // GrantNode defines a method for granting a node access.
    rpc GrantNode(MsgGrantNode) returns (MsgGrantNodeResponse);
    
    // RevokeNode defines a method for revoking access from a node.
    rpc RevokeNode(MsgRevokeNode) returns (MsgRevokeNodeResponse);
}

// MsgCreateValidator defines an SDK message for creating a new validator.
message MsgCreateValidator {
    option (gogoproto.equal) = true;

    string name = 1;
    string certificate = 2;
    int64 power = 3;
    string description = 4;
    string operator = 5 [(gogoproto.moretags) = "yaml:\"operator\""];
}

// MsgCreateValidatorResponse defines the Msg/CreateValidator response type.
message MsgCreateValidatorResponse {
    option (gogoproto.equal) = true;

    string id = 1;
}

// MsgUpdateValidator defines an SDK message for updating an existing validator.
message MsgUpdateValidator {
    option (gogoproto.equal) = true;

    string id = 1;
    string name = 2;
    string certificate = 3;
    int64 power = 4;
    string description = 5;
    string operator = 6;
}

// MsgUpdateValidatorResponse defines the Msg/UpdateValidator response type.
message MsgUpdateValidatorResponse {}

// MsgRemoveValidator defines an SDK message for removing an existing validator.
message MsgRemoveValidator {
    option (gogoproto.equal) = true;

    string id = 1 ;
    string operator = 2;
}

// MsgRemoveValidatorResponse defines the Msg/RemoveValidator response type.
message MsgRemoveValidatorResponse {}

// MsgGrantNode defines a message to grant a node access
message MsgGrantNode {
    option (gogoproto.equal) = true;

    string name = 1;
    string certificate = 2;
    string operator = 3;
}

// MsgGrantNodeResponse defines the Msg/GrantNode response type.
message MsgGrantNodeResponse {
    option (gogoproto.equal) = true;

    string id = 1;
}

// MsgRevokeNode defines a message to revoke access from a node
message MsgRevokeNode {
    option (gogoproto.equal) = true;

    string id = 1;
    string operator = 2;
}

// MsgRevokeNodeResponse defines the Msg/RevokeNode response type.
message MsgRevokeNodeResponse {}
