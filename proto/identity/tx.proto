syntax = "proto3";
package iritamod.identity;

import "identity/identity.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/bianjieai/iritamod/modules/identity/types";
option (gogoproto.goproto_getters_all) = false;

// Msg defines the bank Msg service.
service Msg {
  // CreateIdentity defines a method for creating a new identity.
  rpc CreateIdentity(MsgCreateIdentity) returns (MsgCreateIdentityResponse);

  // UpdateIdentity defines a method for Updating a identity.
  rpc UpdateIdentity(MsgUpdateIdentity) returns (MsgUpdateIdentityResponse);
}

// MsgCreateIdentity defines a message to create an identity
message MsgCreateIdentity {
  option (gogoproto.equal) = true;

  string id = 1 ;
  PubKeyInfo pub_key = 2 [
    (gogoproto.moretags) = "yaml:\"pubkey\"",
    (gogoproto.jsontag) = "pubkey"
  ];
  string certificate = 3;
  string credentials = 4;
  string owner = 5;
  string data = 6;
}

// MsgCreateIdentityResponse defines the Msg/Create response type.
message MsgCreateIdentityResponse {}

// MsgUpdateIdentity defines a message to update an identity
message MsgUpdateIdentity {
  option (gogoproto.equal) = true;

  string id = 1 ;
  PubKeyInfo pub_key = 2 [
    (gogoproto.moretags) = "yaml:\"pubkey\"",
    (gogoproto.jsontag) = "pubkey"
  ];
  string certificate = 3;
  string credentials = 4;
  string owner = 5;
  string data = 6;
}


// MsgUpdateIdentityResponse defines the Msg/Update response type.
message MsgUpdateIdentityResponse {}