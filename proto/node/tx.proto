syntax = "proto3";
package node;

import "node/node.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/bianjieai/iritamod/modules/node/types";
option (gogoproto.goproto_getters_all) = false;

// Msg defines the node Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  // CreateValidator defines a method for creating a validator.
  rpc CreateValidator(MsgCreateValidator) returns (MsgCreateValidatorResponse);

  // UpdateValidator defines a method for updating a validator.
  rpc UpdateValidator(MsgUpdateValidator) returns (MsgUpdateValidatorResponse);

  // RemoveValidator defines a method for removing a validator.
  rpc RemoveValidator(MsgRemoveValidator) returns (MsgRemoveValidatorResponse);

  // GrantNode defines a method for granting a node access.
  rpc GrantNode(MsgGrantNode) returns (MsgGrantNodeResponse);

  // RevokeNode defines a method for revoking access from a node.
  rpc RevokeNode(MsgRevokeNode) returns (MsgRevokeNodeResponse);

  // UpdateParams defines a governance operation for updating the iritamod/node module parameters.
  // The authority is defined in the keeper.
  //
  // Since: cosmos-sdk 0.47
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);
}

// MsgCreateValidator defines an SDK message for creating a new validator.
message MsgCreateValidator {
  option (gogoproto.equal) = true;
  option (cosmos.msg.v1.signer) = "operator";

  string name = 1;
  string certificate = 2;
  int64 power = 3;
  string description = 4;
  string operator = 5 [ (gogoproto.moretags) = "yaml:\"operator\"" ];
}

// MsgCreateValidatorResponse defines the Msg/CreateValidator response type.
message MsgCreateValidatorResponse {
  option (gogoproto.equal) = true;

  string id = 1;
}

// MsgUpdateValidator defines an SDK message for updating an existing validator.
message MsgUpdateValidator {
  option (gogoproto.equal) = true;
  option (cosmos.msg.v1.signer) = "operator";

  string id = 1;
  string name = 2;
  string certificate = 3;
  int64 power = 4;
  string description = 5;
  string operator = 6;
}

// MsgUpdateValidatorResponse defines the Msg/UpdateValidator response type.
message MsgUpdateValidatorResponse {}

// MsgRemoveValidator defines an SDK message for removing an existing validator.
message MsgRemoveValidator {
  option (gogoproto.equal) = true;
  option (cosmos.msg.v1.signer) = "operator";

  string id = 1;
  string operator = 2;
}

// MsgRemoveValidatorResponse defines the Msg/RemoveValidator response type.
message MsgRemoveValidatorResponse {}

// MsgGrantNode defines a message to grant a node access
message MsgGrantNode {
  option (gogoproto.equal) = true;
  option (cosmos.msg.v1.signer) = "operator";

  string name = 1;
  string certificate = 2;
  string operator = 3;
}

// MsgGrantNodeResponse defines the Msg/GrantNode response type.
message MsgGrantNodeResponse {
  option (gogoproto.equal) = true;

  string id = 1;
}

// MsgRevokeNode defines a message to revoke access from a node
message MsgRevokeNode {
  option (gogoproto.equal) = true;
  option (cosmos.msg.v1.signer) = "operator";

  string id = 1;
  string operator = 2;
}

// MsgRevokeNodeResponse defines the Msg/RevokeNode response type.
message MsgRevokeNodeResponse {}

message MsgSwapCoinResponse {}

// MsgUpdateParams is the Msg/UpdateParams request type.
//
// Since: cosmos-sdk 0.47
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";

  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority    = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the node parameters to update.
  Params params = 2 [(gogoproto.nullable) = false];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
//
// Since: cosmos-sdk 0.47
message MsgUpdateParamsResponse {}